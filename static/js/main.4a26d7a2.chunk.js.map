{"version":3,"sources":["component/Forecast.js","component/Layout.js","component/WeatherSearch.js","component/use-deny.js","component/Weather.js","component/Main.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","wi","color","Forecast","props","classes","forecast","result","map","item","index","icon","weatherIcons","icon_id","ListItem","key","className","ListItemText","primary","dayjs","dt_txt","format","style","flex","textAlign","IconButton","disabled","aria-label","fontSize","Typography","variant","component","Math","round","min","max","List","atmospheric","padding","buttons","card","minWidth","minHeight","container","display","flexWrap","error","fullList","width","layout","marginTop","paper","spacing","palette","text","secondary","recommendation","fontFamily","root","flexiGrow","search","Layout","currentWeather","date","isValid","description","Grid","xs","Card","CardHeader","title","city","country","subheader","replace","txt","charAt","toUpperCase","substr","toLowerCase","CardContent","CardMedia","src","float","paddingTop","temperature","gutterBottom","Divider","WeatherSearch","onCityChange","useState","searchForm","setSearchForm","isSearching","setSearching","hasError","denySearchForm","value","delay","denyValue","setDenyValue","useEffect","handler","setTimeout","clearTimeout","useDeny","alignItems","FormControl","InputLabel","htmlFor","Input","id","role","type","onChange","e","target","startAdornment","InputAdornment","position","Tooltip","endAdornment","CircularProgress","size","Weather","api","Main","setCity","setError","setCurrentWeather","setForecast","createMuiTheme","typography","join","h5","fontWeight","fetch","then","res","handleResponse","data","Object","entries","length","mapDataToweatherInterface","getWeather","catch","err","message","i","list","push","ok","json","Error","statusText","mapped","name","sys","Date","dt","weather","main","temp","temp_min","temp_max","keys","forEach","undefined","ThemeProvider","CssBaseline","Container","maxWidth","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.4a26d7a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as weatherIcons from \"../icons.json\";\r\nimport dayjs from \"dayjs\";\r\nimport {\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  wi: {\r\n    color: \"#673ab7\",\r\n  },\r\n}));\r\nexport default function Forecast(props) {\r\n  const classes = useStyles();\r\n  const { forecast } = props;\r\n  const prefix = \"wi wi-\";\r\n  const result = forecast.map((item, index) => {\r\n    const icon = prefix + weatherIcons.default[item.icon_id].icon;\r\n    return (\r\n      <ListItem key={index} className=\"forecastItem\">\r\n        <ListItemText\r\n          className=\"week-day\"\r\n          primary={dayjs(item.dt_txt).format(\"dddd\")}\r\n          style={{ flex: \"1 1 0%\", textAlign: \"left\" }}\r\n        ></ListItemText>\r\n        <IconButton disabled={true} aria-label=\"forecast icon\">\r\n          <span\r\n            className={`${classes.wi} ${icon}`}\r\n            style={{ fontSize: \"24px\" }}\r\n          ></span>\r\n        </IconButton>\r\n        <span className=\"temp\" style={{ flex: \"1 1 0%\", textAlign: \"right\" }}>\r\n          <Typography variant=\"body2\" component=\"span\" color=\"textPrimary\">\r\n            {Math.round(item.min)}&deg; /{\" \"}\r\n          </Typography>\r\n          <Typography variant=\"body2\" component=\"span\" color=\"textSecondary\">\r\n            {Math.round(item.max)}&deg;\r\n          </Typography>\r\n        </span>\r\n      </ListItem>\r\n    );\r\n  });\r\n\r\n  return <List aria-label=\"forecast data\">{result}</List>;\r\n}\r\n","import React from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardMedia,\r\n  Divider,\r\n  Typography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport dayjs from 'dayjs'\r\nconst useStyles = makeStyles((theme) => ({\r\n  atmospheric: {\r\n    fontSize: \"28px\",\r\n    padding: \"5px\",\r\n  },\r\n  buttons: {\r\n    color: \"black\",\r\n  },\r\n  card: {\r\n    minWidth: 600,\r\n    minHeight: 600,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  error: {\r\n    color: \"red\",\r\n    padding: \"10px\",\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n  layout: {\r\n    marginTop: \"20px\",\r\n  },\r\n\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  recommendation: {\r\n    fontFamily: \"Montserrat, sans-serif\",\r\n    padding: \"20px 0px 10px 0px\",\r\n    fontSize: \"26px\",\r\n    textAlign: \"center\",\r\n  },\r\n  root: {\r\n    flexiGrow: 1,\r\n    color: \"black\",\r\n  },\r\n  search: {\r\n    marginTop: \"100px\",\r\n  },\r\n  wi: {\r\n    color: \"#673ab7\",\r\n  },\r\n}));\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n  const { currentWeather, forecast, icon } = props;\r\n  const date = dayjs().isValid(currentWeather.date) ? currentWeather.date : \"\";\r\n  const description = currentWeather.description ? currentWeather.description : \"\";\r\n\r\n  return (\r\n    <div className={classes.layout}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Card className={classes.card}>\r\n            <CardHeader\r\n              title={currentWeather.city + \", \" + currentWeather.country}\r\n              subheader={<span>\r\n                {dayjs(date).format(\"dddd\")}, {dayjs(date).format(\"h:mm\")}{\" \"}\r\n                {dayjs(date).format(\"A\")},{\" \"}\r\n                {description.replace(/\\w\\S*/g, txt => {\r\n                  return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n                })}\r\n              </span>}\r\n            />\r\n            <CardContent>\r\n              <CardMedia\r\n                className={`${icon} ${classes.wi}`}\r\n                src={icon}\r\n                style={{ fontSize: \"128px\", float: \"right\" }}\r\n              />\r\n              <Typography\r\n                variant=\"h2\"\r\n                className=\"big-temp\"\r\n                color=\"textPrimary\"\r\n                component=\"h2\"\r\n                style={{ fontFamily: \"Montserrat\", paddingTop: \"30px\" }}\r\n              >\r\n                {Math.round(currentWeather.temperature)}&deg;C\r\n              </Typography>\r\n              <Typography\r\n                variant=\"subtitle2\"\r\n                className=\"atmospheric-conditions\"\r\n                color=\"textSecondary\"\r\n                gutterBottom\r\n                style={{ paddingTop: \"40px\" }}\r\n              ></Typography>\r\n              <Divider variant=\"middle\" />\r\n              <Forecast forecast={forecast} />\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  CircularProgress,\r\n  FormControl,\r\n  Grid,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useDeny from \"./use-deny\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  error: {\r\n    color: \"red\",\r\n    padding: \"10px\",\r\n  },\r\n  search: {\r\n    marginTop: \"10px\",\r\n  },\r\n}));\r\nexport default function WeatherSearch(props) {\r\n  const classes = useStyles();\r\n  const { onCityChange, error } = props;\r\n  const [searchForm, setSearchForm] = useState(\"\");\r\n  const [isSearching, setSearching] = useState(false);\r\n  const hasError = error ? true : false;\r\n  const denySearchForm = useDeny(searchForm, 1000);\r\n\r\n  const handleSearch = (e) => {\r\n    setSearching(true);\r\n    setSearchForm(e.target.value);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (denySearchForm) {\r\n        onCityChange(denySearchForm);\r\n        setSearching(false);\r\n      }\r\n    },\r\n    [onCityChange, isSearching, denySearchForm]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <Grid container alignItems=\"flex-end\">\r\n        <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n          <FormControl>\r\n            <InputLabel htmlFor=\"search-city\">Enter city name</InputLabel>\r\n            <Input\r\n              id=\"search-city\"\r\n              role=\"search\"\r\n              type=\"text\"\r\n              error={hasError}\r\n              onChange={handleSearch}\r\n              startAdornment={\r\n                <InputAdornment position=\"start\">\r\n                  <Tooltip title=\"Optional: Enter a two-letter country code after the city name to make the search more precise. For example, London, GB.\">\r\n                    <Search />\r\n                  </Tooltip>\r\n                </InputAdornment>\r\n              }\r\n              endAdornment={\r\n                isSearching && (\r\n                  <InputAdornment position=\"end\">\r\n                    <CircularProgress size={20} />\r\n                  </InputAdornment>\r\n                )\r\n              }\r\n            />\r\n            {error && (\r\n              <Typography className={classes.error}>{error}</Typography>\r\n            )}\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function useDeny(value, delay) {\r\n  const [denyValue, setDenyValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDenyValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n  return denyValue;\r\n}\r\n","import React from \"react\";\r\nimport * as weatherIcons from \"../icons\";\r\nimport Layout from \"./Layout\";\r\nimport WeatherSearch from \"./WeatherSearch\";\r\n\r\nexport default function Weather(props) {\r\n  const { city, error, currentWeather, forecast, onCityChange } = props;\r\n  if(currentWeather && forecast){\r\n  const prefix = \"wi wi-\";\r\n  const icon = prefix + weatherIcons.default[currentWeather.icon_id].icon;\r\n\r\n  return (\r\n    <div>\r\n      <WeatherSearch city={city} onCityChange={onCityChange} error={error} />\r\n      <Layout currentWeather={currentWeather} forecast={forecast} icon={icon} />\r\n    </div>\r\n  );\r\n  }\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Weather from \"./Weather\";\r\nimport { createMuiTheme, Container, ThemeProvider } from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nconst api = {\r\n  key: \"feb3f9c68c76bea2bc5cc18463bb265e\",\r\n  base: \"http://api.openweathermap.org/data/2.5/\",\r\n};\r\nexport default function Main() {\r\n  const [city, setCity] = useState(\"Yerevan\");\r\n  const [error, setError] = useState(null);\r\n  const [currentWeather, setCurrentWeather] = useState({});\r\n  const [forecast, setForecast] = useState([]);\r\n\r\n  const theme = createMuiTheme({\r\n    typography: {\r\n      fontFamily: [\r\n        \"Inter\",\r\n        \"-apple-system\",\r\n        \"BlinkMacSystemFont\",\r\n        '\"Helvetica Neue\"',\r\n        \"Arial\",\r\n        \"sans-serif\",\r\n        '\"Apple Color Emoji\"',\r\n        '\"Segoe UI Emoji\"',\r\n        '\"Segoe UI Symbol\"',\r\n      ].join(\",\"),\r\n      fontSize: 10,\r\n      h5: {\r\n        fontWeight: 400,\r\n      },\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    getWeather(city)\r\n      .then((data) => {\r\n        setCurrentWeather(data);\r\n        setError(null);\r\n      })\r\n      .catch((err) => setError(err.message));\r\n  }, [city, error]);\r\n\r\n  useEffect(() => {\r\n    getForecast(city)\r\n      .then((result) => {\r\n        setForecast(result);\r\n        setError(null);\r\n      })\r\n      .catch((err) => setError(err.message));\r\n  }, [city, error]);\r\n\r\n  const handleCityChange = (city) => {\r\n    setCity(city);\r\n  };\r\n\r\n  function handleResponse(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      throw new Error(\"Error: Location \" + res.statusText.toLowerCase());\r\n    }\r\n  }\r\n  function getWeather(city) {\r\n    return fetch(`${api.base}/weather/?q=${city}&units=metric&appid=${api.key}`)\r\n      .then((res) => handleResponse(res))\r\n      .then((data) => {\r\n        if (Object.entries(data).length) {\r\n          const mappedData = mapDataToweatherInterface(data);\r\n          return mappedData;\r\n        }\r\n      });\r\n  }\r\n  function getForecast() {\r\n    return fetch(\r\n      `${api.base}/forecast/?q=${city}&units=metric&appid=${api.key}`\r\n    )\r\n      .then((res) => handleResponse(res))\r\n      .then((result) => {\r\n        if (Object.entries(result).length) {\r\n          const forecast = [];\r\n          for (let i = 0; i < result.list.length; i += 8) {\r\n            forecast.push(mapDataToweatherInterface(result.list[i + 4]));\r\n          }\r\n          return forecast;\r\n        }\r\n      });\r\n  }\r\n  function mapDataToweatherInterface(data) {\r\n    const mapped = {\r\n      city: data.name,\r\n      country: data.sys.country,\r\n      date: new Date(data.dt * 1000),\r\n      description: data.weather[0].description,\r\n      temperature: data.main.temp,\r\n      icon_id: data.weather[0].id,\r\n    };\r\n    //Add properties for the five days forecast\r\n    if (data.dt_txt) {\r\n      mapped.dt_txt = data.dt_txt;\r\n    }\r\n    if (data.weather[0].icon) {\r\n      mapped.icon = data.weather[0].icon;\r\n    }\r\n    if (data.main.temp_min && data.main.temp_max) {\r\n      mapped.max = data.main.temp_max;\r\n      mapped.min = data.main.temp_min;\r\n    }\r\n    // remove undefined fields\r\n    Object.keys(mapped).forEach(\r\n      (key) => mapped[key] === undefined && delete data[key]\r\n    );\r\n    return mapped;\r\n  }\r\n  if (\r\n    (currentWeather && Object.keys(currentWeather).length) ||\r\n    (forecast && Object.keys(forecast).length)\r\n  ) {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"sm\">\r\n          <Weather\r\n            city={city}\r\n            error={error}\r\n            currentWeather={currentWeather}\r\n            forecast={forecast}\r\n            onCityChange={handleCityChange}\r\n          />\r\n        </Container>\r\n      </ThemeProvider>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <CircularProgress color={error ? \"secondary\" : \"primary\"} />\r\n        {error ? <p>{error}</p> : \"\"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Main from './component/Main';\n\nfunction App() {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}